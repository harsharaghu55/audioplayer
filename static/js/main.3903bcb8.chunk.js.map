{"version":3,"sources":["SongList.js","waveForm.js","App.js","reportWebVitals.js","index.js"],"names":["songList","name","url","SongList","setSong","className","map","song","index","id","onClick","WaveForm","waveformRef","useRef","wavesurfer","useState","playing","setPlay","volume","setVolume","useEffect","options","container","current","waveColor","progressColor","cursorColor","barWidth","barRadius","responsive","height","normalize","partialRender","WaveSurfer","create","load","on","Fragment","ref","playPause","type","min","max","step","onChange","e","newVolume","target","value","defaultValue","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAGMA,EAAW,CACb,CACIC,KAAK,2BACLC,IAAK,mEAET,CACID,KAAK,sBACLC,IAAK,8DAET,CACID,KAAK,sBACLC,IAAK,8DAET,CACID,KAAK,oBACLC,IAAK,4DAET,CACID,KAAK,sBACLC,IAAK,8DAET,CACID,KAAK,sBACLC,IAAK,8DAET,CACID,KAAK,oBACLC,IAAK,6DAsBEC,MAlBf,YAAgC,IAAZC,EAAW,EAAXA,QAKhB,OACI,qBAAKC,UAAU,qBAAf,SACKL,EAASM,KAAI,SAACC,EAAKC,GAAN,OAAc,sBACIC,GAAID,EACJH,UAAU,OACVK,QAAS,kBATvBR,EAS4CK,EAAKL,SARvEE,EAAQF,GADZ,IAA0BA,GAMU,UAICK,EAAKN,KACN,qBAAKI,UAAU,gBALLG,S,sBCkCnCG,MA1Df,YAA4B,IAAPT,EAAM,EAANA,IAEXU,EAAcC,iBAAO,MACrBC,EAAaD,iBAAO,MAC1B,EAA2BE,oBAAS,GAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KA+BA,OA7BAC,qBAAU,WACNH,GAAQ,GACR,IAAMI,EAtBoB,CAC9BC,UAqBoCV,EAAYW,QApBhDC,UAAU,OACVC,cAAc,OACdC,YAAY,OACZC,SAAS,EACTC,UAAU,EACVC,YAAW,EACXC,OAAO,IACPC,WAAU,EACVC,eAAc,GAaVlB,EAAWS,QAAUU,IAAWC,OAAOb,GACvCnB,GAAOY,EAAWS,QAAQY,KAAKjC,GAC/BY,EAAWS,QAAQa,GAAG,SAAS,WACvBtB,EAAWS,UACbT,EAAWS,QAAQJ,UAAUD,GAC7BC,EAAUD,SAId,CAAChB,IAkBH,eAAC,IAAMmC,SAAP,WACI,qBAAK5B,GAAG,WAAW6B,IAAK1B,IACxB,sBAAKP,UAAU,WAAf,UACI,wBAAQA,UAAY,iBAAiBK,QAnBzB,WACpBO,GAASD,GACTF,EAAWS,QAAQgB,aAiBX,SAAiEvB,EAAmB,QAAT,SAC3E,uBACAX,UAAY,cACZmC,KAAK,QACL/B,GAAG,SACHR,KAAK,SACLwC,IAAI,OACJC,IAAI,IACJC,KAAK,OACLC,SAvBa,SAAAC,GACrB,IACMC,GADaD,EAAXE,OACkBC,MAEtBF,IACF3B,EAAU2B,GACVhC,EAAWS,QAAQJ,UAAU2B,GAAa,KAkBpCG,aAAc/B,IAEd,uBAAOb,UAAU,cAAc6C,QAAQ,SAAvC,2BCtDDC,MAVf,WACE,MAAyBpC,mBAAS,yFAAlC,mBAAQR,EAAR,KAAaH,EAAb,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,CAAUH,IAAKK,IACf,cAAC,EAAD,CAAUH,QAASA,QCEVgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3903bcb8.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport './SongList.css'\r\n\r\nconst songList = [\r\n    {\r\n        name:\"Toccata-and-Fugue-Dm.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/Toccata-and-Fugue-Dm.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-prelude01.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-prelude01.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-prelude02.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-prelude02.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-fugue02.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-fugue02.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-prelude03.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-prelude03.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-prelude06.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-prelude06.mp3\"\r\n    },\r\n    {\r\n        name:\"book1-fugue10.mp3\",\r\n        url: \"https://www.mfiles.co.uk/mp3-downloads/book1-fugue10.mp3\"\r\n    }\r\n]\r\n\r\nfunction SongList({ setSong }) {\r\n    function songClickHandler(url){\r\n        setSong(url)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"songsListContainer\">\r\n            {songList.map((song,index)=><div key={index} \r\n                                            id={index} \r\n                                            className=\"song\" \r\n                                            onClick={()=>songClickHandler(song.url)}>\r\n                                        {song.name}\r\n                                        <div className=\"borderBox\"></div>\r\n                               </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongList\r\n","import React,{ useEffect,useRef,useState } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport \"./waveForm.css\"\r\n\r\nconst formWaveElement = (ref) => ({\r\n    container:ref,\r\n    waveColor:\"#eee\",\r\n    progressColor:\"blue\",\r\n    cursorColor:\"blue\",\r\n    barWidth:3,\r\n    barRadius:3,\r\n    responsive:true,\r\n    height:150,\r\n    normalize:true,\r\n    partialRender:true\r\n})\r\n\r\nfunction WaveForm ({ url }){\r\n    \r\n    const waveformRef = useRef(null)\r\n    const wavesurfer = useRef(null);\r\n    const [playing, setPlay] = useState(false)\r\n    const [volume, setVolume] = useState(0.5)\r\n  \r\n    useEffect(()=>{ \r\n        setPlay(false);\r\n        const options = formWaveElement(waveformRef.current)\r\n        wavesurfer.current = WaveSurfer.create(options);\r\n        url && wavesurfer.current.load(url);\r\n        wavesurfer.current.on(\"ready\", function() {\r\n            if (wavesurfer.current) {\r\n              wavesurfer.current.setVolume(volume);\r\n              setVolume(volume);\r\n            }\r\n          })\r\n        // return () => wavesurfer.current.destroy();\r\n        },[url])\r\n    \r\n    const handlePlayPause = () => {\r\n        setPlay(!playing);\r\n        wavesurfer.current.playPause();\r\n      };\r\n    \r\n      const onVolumeChange = e => {\r\n        const { target } = e;\r\n        const newVolume = +target.value;\r\n    \r\n        if (newVolume) {\r\n          setVolume(newVolume);\r\n          wavesurfer.current.setVolume(newVolume || 1);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div id=\"waveform\" ref={waveformRef} />\r\n            <div className=\"controls\">\r\n                <button className = \"controlsButton\" onClick={handlePlayPause}>{!playing ? \"Play\" : \"Pause\"}</button>\r\n                <input\r\n                className = \"volumeInput\"\r\n                type=\"range\"\r\n                id=\"volume\"\r\n                name=\"volume\"\r\n                min=\"0.01\"\r\n                max=\"1\"\r\n                step=\".025\"\r\n                onChange={onVolumeChange}\r\n                defaultValue={volume}\r\n                />\r\n                <label className=\"volumeLabel\" htmlFor=\"volume\">Volume</label>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default WaveForm","import './App.css';\nimport { useState } from 'react'\nimport SongList from './SongList';\nimport WaveForm from \"./waveForm\"\n\nfunction App() {\n  const [ song,setSong ] = useState('https://www.mfiles.co.uk/mp3-downloads/brahms-st-anthony-chorale-theme-two-pianos.mp3')\n  return (\n    <div className=\"App\">\n      <WaveForm url={song}/>\n      <SongList setSong={setSong}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}